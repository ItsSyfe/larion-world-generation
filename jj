[1mdiff --git a/src/main/java/com/badgerson/larion/density_function_types/Worley.java b/src/main/java/com/badgerson/larion/density_function_types/Worley.java[m
[1mindex c09f876..c91c59c 100644[m
[1m--- a/src/main/java/com/badgerson/larion/density_function_types/Worley.java[m
[1m+++ b/src/main/java/com/badgerson/larion/density_function_types/Worley.java[m
[36m@@ -3,6 +3,7 @@[m [mpackage com.badgerson.larion.density_function_types;[m
 import com.badgerson.larion.Larion;[m
 import com.badgerson.larion.util.FastNoiseLite;[m
 import com.badgerson.larion.util.WorleyUtil;[m
[32m+[m[32mimport net.minecraft.world.gen.densityfunction.DensityFunction.DensityFunctionVisitor;[m
 import com.badgerson.larion.util.FastNoiseLite.CellularDistanceFunction;[m
 import com.badgerson.larion.util.FastNoiseLite.CellularReturnType;[m
 import com.badgerson.larion.util.FastNoiseLite.DomainWarpType;[m
[36m@@ -15,65 +16,57 @@[m [mimport net.minecraft.util.dynamic.CodecHolder;[m
 import net.minecraft.world.gen.densityfunction.DensityFunction;[m
 import net.minecraft.world.gen.densityfunction.DensityFunctionTypes;[m
 [m
[31m-public record Worley(float frequency, float yScale, DensityFunction shiftX, DensityFunction shiftY,[m
[31m-        DensityFunction shiftZ)[m
[31m-        implements DensityFunction {[m
[32m+[m[32mpublic class Worley[m
[32m+[m[32m        implements DensityFunction.Base {[m
 [m
[31m-    public static final MapCodec<Worley> MAP_CODEC = RecordCodecBuilder.mapCodec([m
[31m-            instance -> instance.group([m
[31m-                    Codec.FLOAT.fieldOf("frequency").forGetter(Worley::frequency),[m
[31m-                    Codec.FLOAT.fieldOf("y_scale").forGetter(Worley::yScale),[m
[31m-                    DensityFunction.FUNCTION_CODEC.fieldOf("shift_x").forGetter(Worley::shiftX),[m
[31m-                    DensityFunction.FUNCTION_CODEC.fieldOf("shift_y").forGetter(Worley::shiftY),[m
[31m-                    DensityFunction.FUNCTION_CODEC.fieldOf("shift_z").forGetter(Worley::shiftZ))[m
[31m-                    .apply(instance, Worley::new));[m
[31m-    public static final CodecHolder<Worley> CODEC = DensityFunctionTypes.holderOf(MAP_CODEC);[m
[32m+[m[32m    private float frequency;[m
[32m+[m
[32m+[m[32m    public float getFrequency() {[m
[32m+[m[32m        return frequency;[m
[32m+[m[32m    }[m
 [m
[31m-    public static class CellNoiseWrapper {[m
[31m-        public FastNoiseLite noise;[m
[32m+[m[32m    private float yScale;[m
 [m
[31m-        public CellNoiseWrapper() {[m
[31m-            noise = new FastNoiseLite();[m
[31m-            noise.SetNoiseType(NoiseType.Cellular);[m
[31m-            noise.SetCellularDistanceFunction(CellularDistanceFunction.EuclideanSq);[m
[31m-            noise.SetCellularReturnType(CellularReturnType.Distance2Div);[m
[31m-            noise.SetDomainWarpType(DomainWarpType.OpenSimplex2);[m
[31m-            noise.SetDomainWarpAmp(30.0f);[m
[31m-            Larion.LOGGER.info("initialized noise");[m
[31m-        }[m
[32m+[m[32m    public float getyScale() {[m
[32m+[m[32m        return yScale;[m
     }[m
[31m-    private static final WorleyUtil noiseWrapper = new WorleyUtil();[m
 [m
[31m-    // public Cellular {[m
[31m-    // noiseWrapper.noise.SetFrequency(frequency);[m
[31m-    // noiseWrapper.noise.SetSeed(seed);[m
[31m-    // // Larion.LOGGER.info("confiruged ceullular noise");[m
[31m-    // }[m
[32m+[m[32m    private FastNoiseLite sampler;[m
[32m+[m
[32m+[m[32m    public Worley(float frequency, float yScale) {[m
[32m+[m[32m        this.frequency = frequency;[m
[32m+[m[32m        this.yScale = yScale;[m
[32m+[m[32m        this.sampler = new FastNoiseLite();[m
[32m+[m[32m        this.sampler.SetSeed(1234);[m
[32m+[m[32m        this.sampler.SetFrequency(frequency);[m
[32m+[m[32m        this.sampler.SetNoiseType(NoiseType.Cellular);[m
[32m+[m[32m        this.sampler.SetCellularDistanceFunction(CellularDistanceFunction.EuclideanSq);[m
[32m+[m[32m        this.sampler.SetCellularReturnType(CellularReturnType.Distance2Div);[m
[32m+[m[32m        this.sampler.SetDomainWarpType(DomainWarpType.OpenSimplex2);[m
[32m+[m[32m        this.sampler.SetDomainWarpAmp(30.0f);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public static final MapCodec<Worley> MAP_CODEC = RecordCodecBuilder.mapCodec([m
[32m+[m[32m            instance -> instance.group([m
[32m+[m[32m                    Codec.FLOAT.fieldOf("frequency").forGetter(Worley::getFrequency),[m
[32m+[m[32m                    Codec.FLOAT.fieldOf("y_scale").forGetter(Worley::getyScale))[m
[32m+[m[32m                    .apply(instance, Worley::new));[m
[32m+[m[32m    public static final CodecHolder<Worley> CODEC = DensityFunctionTypes.holderOf(MAP_CODEC);[m
 [m
     @Override[m
     public double sample(NoisePos pos) {[m
         // Larion.LOGGER.info(Float.toString(result));[m
[31m-        float x = (pos.blockX() + (float) shiftX.sample(pos)) * frequency;[m
[31m-        float z = (pos.blockZ() + (float) shiftZ.sample(pos)) * frequency;[m
[31m-        float y = (pos.blockY() + (float) shiftY.sample(pos)) * frequency * yScale;[m
[31m-        float val = noiseWrapper.SingleCellular3Edge(x, y, z);[m
[32m+[m[32m        float x = pos.blockX() * frequency;[m
[32m+[m[32m        float z = pos.blockZ() * frequency;[m
[32m+[m[32m        float y = pos.blockY() * frequency * yScale;[m
[32m+[m[32m        return sampler.GetNoise(x, y, z);[m
[32m+[m[32m        // float val = noiseWrapper.SingleCellular3Edge(x, y, z);[m
         // Larion.LOGGER.info(Float.toString(val));[m
[31m-        return val;[m
[32m+[m[32m        // return val;[m
         // return this.noise.sample((double)pos.blockX() * this.xzScale,[m
         // (double)pos.blockY() * this.yScale, (double)pos.blockZ() * this.xzScale);[m
     }[m
 [m
[31m-    @Override[m
[31m-    public void fill(double[] densities, EachApplier applier) {[m
[31m-        applier.fill(densities, this);[m
[31m-    }[m
[31m-[m
[31m-    @Override[m
[31m-    public DensityFunction apply(DensityFunctionVisitor visitor) {[m
[31m-        return visitor.apply(new Worley(this.frequency, this.yScale, this.shiftX.apply(visitor),[m
[31m-                this.shiftY.apply(visitor), this.shiftZ.apply(visitor)));[m
[31m-    }[m
[31m-[m
     @Override[m
     public double minValue() {[m
         return -1.0;[m
[1mdiff --git a/src/main/resources/data/larion/worldgen/density_function/overworld/caves/cells.json b/src/main/resources/data/larion/worldgen/density_function/overworld/caves/cells.json[m
[1mindex 8d71b3c..5d1ae52 100644[m
[1m--- a/src/main/resources/data/larion/worldgen/density_function/overworld/caves/cells.json[m
[1m+++ b/src/main/resources/data/larion/worldgen/density_function/overworld/caves/cells.json[m
[36m@@ -7,46 +7,7 @@[m
     "argument2": {[m
       "type": "larion:worley",[m
       "frequency": 1.4,[m
[31m-      "y_scale": 2.0,[m
[31m-      "shift_x": {[m
[31m-        "type": "minecraft:mul",[m
[31m-        "argument1": 30,[m
[31m-        "argument2": {[m
[31m-          "type": "minecraft:shifted_noise",[m
[31m-          "noise": "larion:caves/worley_warp",[m
[31m-          "shift_x": 0.0,[m
[31m-          "shift_y": 0.0,[m
[31m-          "shift_z": 0.0,[m
[31m-          "xz_scale": 1.0,[m
[31m-          "y_scale": 1.0[m
[31m-        }[m
[31m-      },[m
[31m-      "shift_y": {[m
[31m-        "type": "minecraft:mul",[m
[31m-        "argument1": 30,[m
[31m-        "argument2": {[m
[31m-          "type": "minecraft:shifted_noise",[m
[31m-          "noise": "larion:caves/worley_warp",[m
[31m-          "shift_x": 123.56346,[m
[31m-          "shift_y": 7345.12344,[m
[31m-          "shift_z": 1852.5,[m
[31m-          "xz_scale": 1.0,[m
[31m-          "y_scale": 1.0[m
[31m-        }[m
[31m-      },[m
[31m-      "shift_z": {[m
[31m-        "type": "minecraft:mul",[m
[31m-        "argument1": 30,[m
[31m-        "argument2": {[m
[31m-          "type": "minecraft:shifted_noise",[m
[31m-          "noise": "larion:caves/worley_warp",[m
[31m-          "shift_x": 578.420,[m
[31m-          "shift_y": 23721.1234,[m
[31m-          "shift_z": -1247.9634,[m
[31m-          "xz_scale": 1.0,[m
[31m-          "y_scale": 1.0[m
[31m-        }[m
[31m-      }[m
[32m+[m[32m      "y_scale": 2.0[m
     }[m
   }[m
 }[m
